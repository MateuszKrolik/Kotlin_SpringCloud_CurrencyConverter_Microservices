apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    autopilot.gke.io/resource-adjustment: '{"input":{"containers":[{"name":"microservices-currency-conversion-service"}]},"output":{"containers":[{"limits":{"ephemeral-storage":"1Gi"},"requests":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"},"name":"microservices-currency-conversion-service"}]},"modified":true}'
    autopilot.gke.io/warden-version: 3.0.34
    deployment.kubernetes.io/revision: "1"
  labels:
    app: currency-conversion
  name: currency-conversion
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: currency-conversion
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: currency-conversion
    spec:
      containers:
      - image: mateuszkrolik/microservices-currency-conversion-service:0.0.1-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: microservices-currency-conversion-service
        readinessProbe:
          httpGet:
            port: 8100
            path: /actuator/health/readiness
        livenessProbe:
          httpGet:
            port: 8100
            path: /actuator/health/liveness
        envFrom:
          - configMapRef:
              name: currency-conversion
#        env:
#          - name: CURRENCY_EXCHANGE_URI
#            value: http://currency-exchange
        resources:
          limits:
            ephemeral-storage: 1Gi
          requests:
            cpu: 500m
            ephemeral-storage: 1Gi
            memory: 2Gi
        securityContext:
          capabilities:
            drop:
            - NET_RAW
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: kubernetes.io/arch
        operator: Equal
        value: amd64
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: currency-conversion
  name: currency-conversion
  namespace: default
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: 34.118.232.41
  clusterIPs:
    - 34.118.232.41
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - nodePort: 32292
      port: 8100
      protocol: TCP
      targetPort: 8100
  selector:
    app: currency-conversion
  sessionAffinity: None
  type: LoadBalancer
  loadBalancerIP: "34.38.248.160"
---
apiVersion: v1
data:
  CURRENCY_EXCHANGE_URI: "http://currency-exchange"
kind: ConfigMap
metadata:
  name: currency-conversion
  namespace: default

# kubectl delete all -l app=currency-conversion
# kubectl apply -f deployment.yaml
# k create configmap currency-conversion --from-literal=CURRENCY_EXCHANGE_URI=http://currency-exchange
# k get configmap currency-conversion -o yaml >> configmap.yaml